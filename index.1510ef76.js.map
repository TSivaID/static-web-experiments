{"mappings":"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","sources":["node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v4.js","src/utils/cookie.ts","src/identity/set_session_id.ts","src/components/consent_banner.ts","src/index.ts","src/analytics/index.ts","src/identity/create_anonymous_user_id.ts","src/components/subscribe_newsletter.ts"],"sourcesContent":["const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","/**\n * @module cookie\n * @author T. Siva <t.siva AT outlook.com>\n * @license MIT\n * @description\n * A simple utility module to handle browser cookies with all possible options.\n *\n * Usage example:\n * ```\n * import { setCookie, getCookie, setSessionCookie } from './cookie';\n *\n * setCookie('name', 'John Doe', { maxAge: 3600, path: '/', secure: true });\n * const name = getCookie('name');\n * setSessionCookie('session', '12345');\n * ```\n */\n\n/**\n * Sets a cookie with the given name, value, and options.\n * @param {string} name - The name of the cookie.\n * @param {string} value - The value of the cookie.\n * @param {object} [options] - Optional options for the cookie.\n * @param {number} [options.maxAge] - The max age of the cookie in seconds.\n * @param {string} [options.path] - The path for the cookie.\n * @param {string} [options.domain] - The domain for the cookie.\n * @param {boolean} [options.secure] - Indicates whether the cookie should be secure.\n * @param {string} [options.sameSite] - The SameSite attribute for the cookie.\n */\nexport function setCookie(\n  name: string,\n  value: string,\n  options?: {\n    maxAge?: number;\n    path?: string;\n    domain?: string;\n    secure?: boolean;\n    sameSite?: 'strict' | 'lax' | 'none';\n  }\n): void {\n  let cookie = `${encodeURIComponent(name)}=${encodeURIComponent(value)}`;\n\n  if (options) {\n    if (options.maxAge !== undefined) {\n      cookie += `; max-age=${options.maxAge}`;\n    }\n    if (options.path) {\n      cookie += `; path=${options.path}`;\n    }\n    if (options.domain) {\n      cookie += `; domain=${options.domain}`;\n    }\n    if (options.secure) {\n      cookie += '; secure';\n    }\n    if (options.sameSite) {\n      cookie += `; samesite=${options.sameSite}`;\n    }\n  }\n\n  document.cookie = cookie;\n}\n\n/**\n * Gets the value of a cookie by its name.\n * @param {string} name - The name of the cookie.\n * @returns {string | null} The value of the cookie or null if not found.\n */\nexport function getCookie(name: string): string | null {\n  const cookieName = encodeURIComponent(name) + '=';\n  const cookies = document.cookie.split(';');\n\n  for (const cookie of cookies) {\n    const trimmedCookie = cookie.trim();\n    if (trimmedCookie.startsWith(cookieName)) {\n      return decodeURIComponent(trimmedCookie.slice(cookieName.length));\n    }\n  }\n\n  return null;\n}\n\n/**\n * Sets a session cookie with the given name and value.\n * @param {string} name - The name of the cookie.\n * @param {string} value - The value of the cookie.\n */\nexport function setSessionCookie(name: string, value: string): void {\n  setCookie(name, value);\n}\n\n/**\n * Deletes a cookie by setting its max-age to 0.\n * @param {string} name - The name of the cookie to delete.\n * @param {object} [options] - Optional settings for the deletion, such as path and domain.\n */\nexport function deleteCookie(name: string, options?: { path?: string; domain?: string }) {\n  setCookie(name, '', { maxAge: 0, ...(options || {}) });\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport { deleteCookie, getCookie, setCookie } from '../utils/cookie';\n\nexport function checkAndSetSessionId(): void {\n  const sessionId = getCookie('session_id');\n  if (!sessionId) {\n    // Generate a new session_id and set the cookie\n    const newSessionId = uuidv4();\n    setCookie('session_id', newSessionId);\n\n    // Increment the sessionCount cookie\n    const sessionCount = parseInt(getCookie('session_count') || '0', 10);\n    const newSessionCount = (sessionCount + 1).toString();\n    setCookie('session_count', newSessionCount, { maxAge: 30 * 24 * 60 * 60 });\n  }\n}\n\n// Initialize the inactivity timer\nexport function initInactivityTimer() {\n  let timeout: ReturnType<typeof setTimeout> | null = null;\n\n  function resetTimeout(): void {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(() => {\n      deleteCookie('session_id'); // Delete the session_id cookie\n      checkAndSetSessionId(); // Create a new session_id after the old one has been deleted\n    }, 30 * 60 * 1000); // 30 minutes\n  }\n\n  // Listen for user activity events to reset the timeout\n  document.addEventListener('mousemove', resetTimeout);\n  document.addEventListener('mousedown', resetTimeout);\n  document.addEventListener('keypress', resetTimeout);\n  document.addEventListener('touchmove', resetTimeout);\n  document.addEventListener('scroll', resetTimeout);\n}\n","function setupConsentBanner() {\n  const consentBanner = document.getElementById('cookie-consent-banner');\n  const acceptCookiesBtn = document.getElementById('accept-cookies');\n\n  function checkCookieConsent(): boolean {\n    const consentValue = localStorage.getItem('cookie_consent');\n    return consentValue === 'accepted';\n  }\n\n  function acceptCookieConsent(): void {\n    localStorage.setItem('cookie_consent', 'accepted');\n    if (consentBanner) {\n      consentBanner.classList.add('hidden');\n    }\n  }\n\n  if (!checkCookieConsent() && consentBanner) {\n    consentBanner.classList.remove('hidden');\n  }\n\n  if (acceptCookiesBtn) {\n    acceptCookiesBtn.addEventListener('click', () => {\n      acceptCookieConsent();\n    });\n  }\n}\n\nexport const initConsentBanner = (): void => {\n  setupConsentBanner();\n};\n","import { YourAnalyticsClass } from './analytics';\nimport { checkAndSetAnonymousId } from './identity/create_anonymous_user_id';\nimport { checkAndSetSessionId, initInactivityTimer } from './identity/set_session_id';\nimport { initModal } from './components/subscribe_newsletter';\nimport { initConsentBanner } from './components/consent_banner';\n\nconst analytics = new YourAnalyticsClass();\nanalytics.trackEvent('page_load');\n\ncheckAndSetAnonymousId();\ncheckAndSetSessionId();\ninitInactivityTimer();\ninitModal();\ninitConsentBanner();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // const urlParams = new URLSearchParams(window.location.search);\n  // const title = urlParams.get('title') || 'Default Title';\n  const hash = window.location.hash.substring(1); // Remove the leading #\n  const decodedHash = decodeURIComponent(hash);\n  const title = decodedHash || 'Default Title';\n\n  const storyTitleElement = document.getElementById('story-title');\n  if (storyTitleElement) {\n    storyTitleElement.textContent = title;\n  }\n});\n","export class YourAnalyticsClass {\n  constructor() {\n    // Your constructor logic here\n  }\n\n  public trackEvent(event: string): void {\n    console.log(`Tracking event: ${event}`);\n    // Your tracking logic here\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport { getCookie, setCookie } from '../utils/cookie';\n\nexport function checkAndSetAnonymousId(): void {\n  const anonymousId = getCookie('anonymous_user_id');\n  const cookieOptions = { maxAge: 365 * 24 * 60 * 60 };\n\n  if (!anonymousId) {\n    setCookie('anonymous_user_id', uuidv4(), cookieOptions);\n  } else {\n    // Update the anonymous_user_id cookie with the same value but reset its maxAge.\n    setCookie('anonymous_user_id', anonymousId, cookieOptions);\n  }\n}\n","import { setCookie, getCookie } from '../utils/cookie';\n\nexport function initModal() {\n  const modal = document.getElementById('subscription-modal') as HTMLElement;\n  const showModalButton = document.getElementById('show-modal') as HTMLButtonElement;\n  const closeButton = document.querySelector('.close') as HTMLElement;\n\n  if (!modal || !showModalButton || !closeButton) {\n    return;\n  }\n\n  const sessionCount = parseInt(getCookie('session_count') || '0', 10);\n  const subscribed = getCookie('subscribed') === 'true';\n  const closed = getCookie('subscribeModalClosed') === 'true';\n\n  showModalButton.onclick = () => {\n    modal.style.display = 'block';\n  };\n\n  closeButton.onclick = () => {\n    modal.style.display = 'none';\n    setCookie('subscribeModalClosed', 'true', { maxAge: 1 * 24 * 60 * 60 });\n  };\n\n  window.onclick = (event: MouseEvent) => {\n    if (event.target === modal) {\n      modal.style.display = 'none';\n    }\n  };\n\n  // Replace this with your actual newsletter form submission event\n  document.getElementById('newsletter-form')?.addEventListener('submit', (e) => {\n    e.preventDefault();\n    setCookie('subscribed', 'true', { maxAge: 365 * 24 * 60 * 60 });\n    modal.style.display = 'none';\n  });\n\n  // Show the modal only for 1st and 5th visit, and if the user has not subscribed\n  if (!subscribed && !closed && (sessionCount === 1 || sessionCount === 5)) {\n    modal.style.display = 'block';\n  } else {\n    modal.style.display = 'none';\n  }\n}\n"],"names":["$37f105a7b9674789$export$2e2bcd8739ae039","crypto","randomUUID","bind","$1ac7e0985a17c228$var$getRandomValues","$1ac7e0985a17c228$var$rnds8","Uint8Array","$1ac7e0985a17c228$export$2e2bcd8739ae039","getRandomValues","Error","$bd59f5a7d9c833e9$var$byteToHex","i","push","toString","slice","$bd59f5a7d9c833e9$export$8fb373d660548968","arr","offset","toLowerCase","$e3a4bb9406254d13$export$2e2bcd8739ae039","options","buf","rnds","random","rng","$3c6b556b43a86097$export$110700823644f4a6","name","value","cookie","encodeURIComponent","undefined","maxAge","path","domain","secure","sameSite","document","$3c6b556b43a86097$export$4be65e66cfa2648a","cookieName","cookies","split","trimmedCookie","trim","startsWith","decodeURIComponent","length","$86fa983da2f65511$export$1cbd0a6d0e35dd33","parseInt","$98227461de966397$var$setupConsentBanner","consentBanner","getElementById","acceptCookiesBtn","localStorage","getItem","classList","remove","addEventListener","setItem","add","trackEvent","event","console","log","constructor","anonymousId","cookieOptions","timeout","resetTimeout","clearTimeout","setTimeout","modal","showModalButton","closeButton","querySelector","sessionCount","subscribed","closed","onclick","style","display","window","target","e","preventDefault","hash","location","substring","title","storyTitleElement","textContent"],"version":3,"file":"index.1510ef76.js.map"}