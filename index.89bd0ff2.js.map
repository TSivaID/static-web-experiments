{"mappings":"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","sources":["node_modules/@swc/helpers/src/_define_property.mjs","src/utils/cookie.ts","src/utils/logger.ts","src/analytics/providers/mock-api-analytics.ts","src/analytics/providers/dummy-analytics.ts","src/analytics/service.ts","src/analytics/triggers/index.ts","node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v4.js","src/identity/set-session-id.ts","src/components/consent-banner.ts","src/index.ts","src/analytics/index.ts","src/identity/create-anonymous-user-id.ts","src/components/subscribe-newsletter.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","/**\n * @module cookie\n * @author T. Siva <t.siva AT outlook.com>\n * @license MIT\n * @description\n * A simple utility module to handle browser cookies with all possible options.\n *\n * Usage example:\n * ```\n * import { setCookie, getCookie, setSessionCookie } from './cookie';\n *\n * setCookie('name', 'John Doe', { maxAge: 3600, path: '/', secure: true });\n * const name = getCookie('name');\n * setSessionCookie('session', '12345');\n * ```\n */\n\n/**\n * Sets a cookie with the given name, value, and options.\n * @param {string} name - The name of the cookie.\n * @param {string} value - The value of the cookie.\n * @param {object} [options] - Optional options for the cookie.\n * @param {number} [options.maxAge] - The max age of the cookie in seconds.\n * @param {string} [options.path] - The path for the cookie.\n * @param {string} [options.domain] - The domain for the cookie.\n * @param {boolean} [options.secure] - Indicates whether the cookie should be secure.\n * @param {string} [options.sameSite] - The SameSite attribute for the cookie.\n */\nexport function setCookie(\n  name: string,\n  value: string,\n  options?: {\n    maxAge?: number;\n    path?: string;\n    domain?: string;\n    secure?: boolean;\n    sameSite?: 'strict' | 'lax' | 'none';\n  }\n): void {\n  let cookie = `${encodeURIComponent(name)}=${encodeURIComponent(value)}`;\n\n  if (options) {\n    if (options.maxAge !== undefined) {\n      cookie += `; max-age=${options.maxAge}`;\n    }\n    if (options.path) {\n      cookie += `; path=${options.path}`;\n    }\n    if (options.domain) {\n      cookie += `; domain=${options.domain}`;\n    }\n    if (options.secure) {\n      cookie += '; secure';\n    }\n    if (options.sameSite) {\n      cookie += `; samesite=${options.sameSite}`;\n    }\n  }\n\n  document.cookie = cookie;\n}\n\n/**\n * Gets the value of a cookie by its name.\n * @param {string} name - The name of the cookie.\n * @returns {string | null} The value of the cookie or null if not found.\n */\nexport function getCookie(name: string): string | null {\n  const cookieName = encodeURIComponent(name) + '=';\n  const cookies = document.cookie.split(';');\n\n  for (const cookie of cookies) {\n    const trimmedCookie = cookie.trim();\n    if (trimmedCookie.startsWith(cookieName)) {\n      return decodeURIComponent(trimmedCookie.slice(cookieName.length));\n    }\n  }\n\n  return null;\n}\n\n/**\n * Sets a session cookie with the given name and value.\n * @param {string} name - The name of the cookie.\n * @param {string} value - The value of the cookie.\n */\nexport function setSessionCookie(name: string, value: string): void {\n  setCookie(name, value);\n}\n\n/**\n * Deletes a cookie by setting its max-age to 0.\n * @param {string} name - The name of the cookie to delete.\n * @param {object} [options] - Optional settings for the deletion, such as path and domain.\n */\nexport function deleteCookie(name: string, options?: { path?: string; domain?: string }) {\n  setCookie(name, '', { maxAge: 0, ...(options || {}) });\n}\n","/**\n * @module logger\n * @version 0.1.0\n * @author T. Siva <t.siva AT outlook.com>\n * @license MIT\n * @description\n * A simple, flexible, and performant logger for use in the browser.\n *\n * The logger provides a way to output messages with different log levels (DEBUG, INFO, WARN, and ERROR)\n * and allows you to include metadata and a thunk function for lazy evaluation of additional information.\n *\n * Thunk functions are useful in scenarios where computing additional information is computationally\n * expensive or time-consuming. By passing a thunk function, the additional information will only be\n * computed when the log level condition is met, avoiding unnecessary computation and improving\n * performance.\n *\n * Usage example:\n * ```\n * import { Logger, LogLevel } from './utils/logger';\n *\n * const logger = new Logger(LogLevel.DEBUG);\n *\n * logger.debug('Debug message');\n * logger.info('Info message', { metadata: { user: 'John Doe' } });\n * logger.warn('Warning message', { metadata: { errorCode: 123 } });\n * logger.error('Error message', { metadata: { error: new Error('Something went wrong') }, thunk: () => ({ additionalInfo: 'lazy evaluated info' }) });\n * ```\n *\n * Usage example with only thunk (without metadata):\n * ```\n * logger.info('Info message', { thunk: () => ({ user: 'John Doe', action: 'lazy evaluated info' }) });\n * ```\n */\n\nimport { getCookie, setCookie } from './cookie';\n\n/**\n * LogLevel represents the available logging levels.\n */\nexport enum LogLevel {\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n}\n\n/**\n * Logger class for handling logging messages.\n */\nexport class Logger {\n  private logLevel: LogLevel;\n\n  constructor(logLevel: LogLevel) {\n    this.logLevel = logLevel;\n  }\n\n  /**\n   * Gets the current log level.\n   * @returns {LogLevel} The current log level.\n   */\n  public getLogLevel(): LogLevel {\n    return this.logLevel;\n  }\n\n  /**\n   * Logs a debug message.\n   * @param {string} message - The message to log.\n   * @param {object} [options] - Optional object containing metadata and thunk properties.\n   * @param {object} [options.metadata] - Optional metadata to include with the log.\n   * @param {() => object} [options.thunk] - Optional function that returns additional metadata.\n   */\n  public debug(message: string, options?: { metadata?: object; thunk?: () => object }) {\n    this.log(LogLevel.DEBUG, message, options);\n  }\n\n  /**\n   * Logs an info message.\n   * @param {string} message - The message to log.\n   * @param {object} [options] - Optional object containing metadata and thunk properties.\n   * @param {object} [options.metadata] - Optional metadata to include with the log.\n   * @param {() => object} [options.thunk] - Optional function that returns additional metadata.\n   */\n  public info(message: string, options?: { metadata?: object; thunk?: () => object }) {\n    this.log(LogLevel.INFO, message, options);\n  }\n\n  /**\n   * Logs a warning message.\n   * @param {string} message - The message to log.\n   * @param {object} [options] - Optional object containing metadata and thunk properties.\n   * @param {object} [options.metadata] - Optional metadata to include with the log.\n   * @param {() => object} [options.thunk] - Optional function that returns additional metadata.\n   */\n  public warn(message: string, options?: { metadata?: object; thunk?: () => object }) {\n    this.log(LogLevel.WARN, message, options);\n  }\n\n  /**\n   * Logs an error message.\n   * @param {string} message - The message to log.\n   * @param {object} [options] - Optional object containing metadata and thunk properties.\n   * @param {object} [options.metadata] - Optional metadata to include with the log.\n   * @param {() => object} [options.thunk] - Optional function that returns additional metadata.\n   */\n  public error(message: string, options?: { metadata?: object; thunk?: () => object }) {\n    this.log(LogLevel.ERROR, message, options);\n  }\n\n  /**\n   * Logs a message with the specified log level.\n   * @param {LogLevel} level - The log level.\n   * @param {string} message - The message to log.\n   * @param {object} [options] - Optional object containing metadata and thunk properties.\n   * @param {object} [options.metadata] - Optional metadata to include with the log.\n   * @param {() => object} [options.thunk] - Optional function that returns additional metadata.\n   */\n  private log(level: LogLevel, message: string, options?: { metadata?: object; thunk?: () => object }) {\n    if (level >= this.logLevel) {\n      let logMetadata;\n      const cleanedLogLevel =\n        level === LogLevel.DEBUG\n          ? 'debug'\n          : level === LogLevel.INFO\n          ? 'info'\n          : level === LogLevel.WARN\n          ? 'warn'\n          : level === LogLevel.ERROR\n          ? 'error'\n          : 'info';\n      try {\n        const metaData = options?.metadata ? { metadata: { ...options.metadata } } : undefined;\n        const thunkData = options?.thunk ? { thunk: { ...options.thunk() } } : undefined;\n        logMetadata = metaData || thunkData ? { ...(metaData || {}), ...(thunkData || {}) } : undefined;\n      } catch (error) {\n        console.error('Error while logging message', error);\n      }\n      if (logMetadata) {\n        console[cleanedLogLevel](message, logMetadata);\n      } else {\n        console[cleanedLogLevel](message);\n      }\n    }\n  }\n}\n\n/**\n * Returns the log level from the URL query string.\n * @returns {LogLevel} The log level.\n */\nfunction getLogLevelFromUrl(): LogLevel | undefined {\n  const urlParams = new URLSearchParams(window.location.search);\n  const logLevelParam = urlParams.get('loglevel');\n\n  if (logLevelParam) {\n    const logLevel = logLevelParam.toLowerCase();\n    if (logLevel === 'debug') return LogLevel.DEBUG;\n    if (logLevel === 'info') return LogLevel.INFO;\n    if (logLevel === 'warn') return LogLevel.WARN;\n    if (logLevel === 'error') return LogLevel.ERROR;\n  }\n\n  return undefined;\n}\n\n/**\n * Saves the log level to a session cookie.\n * @param {LogLevel} logLevel - The log level.\n */\nfunction saveLogLevelToSessionCookie(logLevel: LogLevel) {\n  setCookie('session_loglevel', logLevel.toString(), { path: '/', sameSite: 'strict' });\n}\n\n/**\n * Returns the log level from the session cookie.\n * @returns {LogLevel} The log level.\n * @returns {undefined} If the log level is not found in the session cookie.\n */\nfunction getLogLevelFromSessionCookie(): LogLevel | undefined {\n  const logLevelStr = getCookie('session_loglevel');\n\n  if (logLevelStr) {\n    const logLevel = parseInt(logLevelStr);\n    if (LogLevel[logLevel]) {\n      return logLevel;\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Initializes the logger.\n * @returns {Logger} The logger.\n * @returns {undefined} If the log level is not found in the session cookie.\n */\nexport function initializeLogger(): Logger {\n  let logLevel: LogLevel = LogLevel.INFO; // Default log level\n\n  const urlLogLevel = getLogLevelFromUrl();\n  if (urlLogLevel !== undefined) {\n    logLevel = urlLogLevel;\n    saveLogLevelToSessionCookie(logLevel);\n  } else {\n    const sessionLogLevel = getLogLevelFromSessionCookie();\n    if (sessionLogLevel !== undefined) {\n      logLevel = sessionLogLevel;\n    }\n  }\n\n  return new Logger(logLevel);\n}\n\nexport const logger = initializeLogger();\n","import { IAnalyticsProvider } from './ianalytics-provider';\nimport { logger } from '../../utils/logger';\n\ninterface MockApiAnalyticsConfig {\n  useSendBeacon?: boolean;\n}\n\n/**\n * MockApiAnalytics is a simple Mock analytics provider that sends events to a\n * Mock API endpoint. This is useful for testing analytics in a development environment.\n */\nexport class MockApiAnalytics implements IAnalyticsProvider {\n  public readonly name = 'MockApiAnalytics';\n  private readonly endpoint: string = 'https://static-web-experiments.free.beeceptor.com/events/';\n  private readonly useSendBeacon: boolean;\n\n  constructor(config?: MockApiAnalyticsConfig) {\n    this.useSendBeacon = config?.useSendBeacon === true ? true : false;\n  }\n\n  initialize(): void {\n    logger.info('MockApiAnalytics initialized');\n  }\n\n  async trackEvent(eventName: string, data?: Record<string, unknown>): Promise<void> {\n    if (!data?.beeceptor_analytics) return Promise.resolve();\n    const providerData = { ...data.beeceptor_analytics, useSendBeacon: this.useSendBeacon };\n\n    if (this.useSendBeacon && navigator.sendBeacon) {\n      const blob = new Blob([JSON.stringify({ eventName, data: providerData })], { type: 'text/plain' });\n\n      const success = navigator.sendBeacon(`${this.endpoint}`, blob);\n\n      if (success) {\n        logger.info(\n          `MockApiAnalytics sent event using sendBeacon: ${eventName} with data: ${JSON.stringify(providerData)}`\n        );\n      } else {\n        logger.error(`MockApiAnalytics failed to send event using sendBeacon: ${eventName}`);\n      }\n\n      return Promise.resolve();\n    } else {\n      try {\n        logger.info(`MockApiAnalytics sending event: ${eventName} with data: ${JSON.stringify(providerData)}`);\n        const response = await fetch(`${this.endpoint}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ eventName, data: providerData }),\n          // keepalive: true,\n        });\n        if (!response.ok) {\n          logger.error(`MockApiAnalytics failed to track event: ${response.statusText}`);\n          return Promise.resolve();\n        }\n      } catch (error) {\n        logger.error(`MockApiAnalytics failed to track event: ${(error as Error).message}`);\n        return Promise.resolve();\n      }\n    }\n  }\n}\n","import { IAnalyticsProvider } from './ianalytics-provider';\nimport { logger } from '../../utils/logger';\n\n/**\n * DummyAnalytics is a simple Mock analytics provider that just logs to the console.\n * This is useful for testing analytics in a development environment.\n */\nexport class DummyAnalytics implements IAnalyticsProvider {\n  public readonly name = 'DummyAnalytics';\n\n  initialize(): void {\n    logger.info('DummyAnalytics initialized');\n  }\n\n  async trackEvent(eventName: string, data?: Record<string, unknown>): Promise<void> {\n    if (data?.dummy_analytics) {\n      logger.info(`DummyAnalytics tracked event: ${eventName} with data: ${JSON.stringify(data.dummy_analytics)}`);\n    }\n    return Promise.resolve();\n  }\n}\n","import { IAnalyticsProvider } from './providers/ianalytics-provider';\nimport { logger } from '../utils/logger';\n\nexport class AnalyticsService {\n  private analyticsProviders: Array<IAnalyticsProvider>;\n  protected isInitialized = false;\n\n  constructor(providers: Array<IAnalyticsProvider>) {\n    this.analyticsProviders = providers;\n  }\n\n  async initialize(options?: Record<string, unknown>): Promise<void> {\n    if (this.isInitialized) {\n      logger.warn('AnalyticsService already initialized');\n      return;\n    }\n    await Promise.all(\n      this.analyticsProviders.map((provider: IAnalyticsProvider) => {\n        provider.initialize(options);\n        logger.info(`AnalyticsService: ${provider.name} initialized`);\n      })\n    );\n    this.isInitialized = true;\n  }\n\n  async trackEvent(eventName: string, data?: Record<string, unknown>): Promise<void> {\n    logger.info(`AnalyticsService.track called with eventName=${eventName} data=${JSON.stringify(data)}`);\n    await Promise.all(\n      this.analyticsProviders.map((provider: IAnalyticsProvider) => provider.trackEvent(eventName, data))\n    );\n  }\n}\n","import { AnalyticsService } from '../service';\nimport { logger } from '../../utils/logger';\n\n// enum Triggers {\n//     WINDOW_LOAD = 'load',\n//     WINDOW_UNLOAD = 'unload',\n//     DOM_READY = 'domReady',\n//     PAGE_VIEW = 'pageView',\n//     SCROLL = 'scroll',\n//     CLICK = 'click',\n//     CUSTOM = 'custom',\n// }\n\ninterface ITrigger {\n  name: string;\n  selector: Element;\n  addEventListener: (event: string, callback: (event: Event) => void) => void;\n  removeEventListener: (event: string, callback: (event: Event) => void) => void;\n  handler: (event: Event) => void;\n}\n\ninterface PageVars {\n  vars: {\n    [key: string]: unknown;\n  };\n}\n\ninterface CommonVars {\n  [key: string]: unknown;\n}\n\n/*\n{\n  \"name\":\"test_click_event\",\n  \"vars\": {\n    \"key1\": \"key1_value\",\n    \"key2\": \"key2_value\"\n  },\n  \"providers\": {\n    \"dummy_analytics\": {\n      \"keys\": [\n        \"key1\",\n        \"key2\"\n      ],\n      \"extra_keys\": [\n        \"page_var1\",\n        \"page_var2\"\n      ],\n      \"exclude_keys\": [\n        \"page_var3\"\n      ],\n      \"key_mapping\": {\n        \"key1\": \"key1_name\",\n        \"key2\": \"key2_name\"\n      }\n    }\n  }\n}\n*/\ninterface EventConf {\n  name: string;\n  vars?: Record<string, unknown>;\n  providers: {\n    // provider name\n    [key: string]: {\n      // Dedicated key names of event attributes for the provider. It can be from `vars` from the event.\n      keys?: string[];\n      // Additional Key names of event attributes for the provider. It can be one of keys added as page vars. (from json string of #page-vars selector in the page)\n      extra_keys?: string[];\n      // Key names of event attributes to be excluded for the provider. It can be one of keys added as common vars.\n      exclude_keys?: string[];\n      // Key names of event attributes to be renamed for the provider. If this is not provided,\n      // the key name will be used as is available in the keys attribute of the provider.\n      key_mapping?: Record<string, string>;\n    };\n  };\n}\n\nclass TriggerVariablesParser {\n  /**\n   * Common variables that are available for all events from the Analytics module\n   * @returns {CommonVars} Common variables that are available for all events\n   */\n  private getCommonVars(): CommonVars {\n    return {\n      event_timestamp: new Date().toISOString(),\n      user_agent: window.navigator.userAgent,\n    };\n  }\n\n  /**\n   * Page variables that are available for all events from the web page\n   * @returns {PageVars} Page variables that are available for all events\n   */\n  private getPageVars(): PageVars | undefined {\n    const pageVars = document.querySelector('#page-vars');\n    if (!pageVars) {\n      logger.error('No page-vars found');\n      return undefined;\n    }\n    try {\n      const pageVarsObj = JSON.parse(pageVars.innerHTML);\n      return pageVarsObj;\n    } catch (error) {\n      logger.error('Error parsing page-vars');\n      return undefined;\n    }\n  }\n\n  /**\n   * Get variables for the event\n   * @param {EventConf} eventConf Event configuration\n   * @returns {Record<string, unknown>} Variables for the event\n   */\n  public getVars(eventConf: EventConf): Record<string, unknown> {\n    const commonVars = this.getCommonVars();\n    const pageVarsObj = this.getPageVars();\n    const pageVars = pageVarsObj ? pageVarsObj.vars : {};\n    const eventVars = eventConf.vars || {};\n\n    const combinedVars: Record<string, unknown> = { ...pageVars, ...eventVars };\n\n    const resultVars: Record<string, unknown> = {};\n\n    for (const provider in eventConf.providers) {\n      const providerConfig = eventConf.providers[provider];\n      const providerVars: Record<string, unknown> = { ...commonVars };\n\n      if (providerConfig.keys) {\n        for (const key of providerConfig.keys) {\n          if (Object.prototype.hasOwnProperty.call(combinedVars, key)) {\n            providerVars[key] = combinedVars[key];\n          }\n        }\n      }\n\n      if (providerConfig.extra_keys) {\n        for (const key of providerConfig.extra_keys) {\n          if (Object.prototype.hasOwnProperty.call(combinedVars, key)) {\n            providerVars[key] = combinedVars[key];\n          }\n        }\n      }\n\n      if (providerConfig.exclude_keys) {\n        for (const key of providerConfig.exclude_keys) {\n          if (Object.prototype.hasOwnProperty.call(providerVars, key)) {\n            delete providerVars[key];\n          }\n        }\n      }\n\n      if (providerConfig.key_mapping) {\n        for (const key in providerConfig.key_mapping) {\n          if (Object.prototype.hasOwnProperty.call(providerVars, key)) {\n            const newKey = providerConfig.key_mapping[key];\n            providerVars[newKey] = providerVars[key];\n            delete providerVars[key];\n          }\n        }\n      }\n\n      resultVars[provider] = providerVars;\n    }\n\n    return resultVars;\n  }\n}\n\nabstract class Trigger implements ITrigger {\n  name: string;\n  selector: HTMLElement;\n  analyticsService: AnalyticsService;\n  triggerVariableParser = new TriggerVariablesParser();\n\n  constructor(name: string, element: Element, analyticsService: AnalyticsService) {\n    this.name = name;\n    this.selector = element as HTMLElement;\n    this.analyticsService = analyticsService;\n  }\n\n  abstract handler(event: Event): void;\n\n  public addEventListener() {\n    this.selector.addEventListener(this.name, this.handler.bind(this));\n  }\n\n  public removeEventListener() {\n    this.selector.removeEventListener(this.name, this.handler.bind(this));\n  }\n\n  public getEventConf(eventConf: string): EventConf | undefined {\n    if (!eventConf) {\n      logger.error(`No eventConf found for ${this.name} trigger`);\n      return undefined;\n    } else {\n      try {\n        const eventConfObj: EventConf = JSON.parse(eventConf);\n        return eventConfObj;\n      } catch (error) {\n        logger.error(`Error parsing eventConf for ${this.name} trigger`);\n        return undefined;\n      }\n    }\n  }\n}\n\nexport class ClickTrigger extends Trigger {\n  constructor(selector: Element, analyticsService: AnalyticsService) {\n    super('click', selector, analyticsService);\n  }\n\n  handler(event: Event): void {\n    const eventConf = (event?.currentTarget as HTMLElement)?.dataset?.eventConf as string;\n    const eventConfObj = this.getEventConf(eventConf);\n    if (!eventConfObj) {\n      return;\n    } else {\n      const vars = this.triggerVariableParser.getVars(eventConfObj);\n      this.analyticsService.trackEvent(eventConfObj.name, vars);\n    }\n  }\n}\n\nexport class TriggerBinder {\n  analyticsService: AnalyticsService;\n\n  constructor(analyticsService: AnalyticsService) {\n    this.analyticsService = analyticsService;\n  }\n\n  initialize() {\n    this.bindClickTriggers();\n  }\n\n  private bindClickTriggers() {\n    const clickTriggerElements = document.querySelectorAll('[data-ae-trigger=\"click\"]');\n    const clickTriggers = Array.from(clickTriggerElements).map(\n      (element) => new ClickTrigger(element, this.analyticsService)\n    );\n    clickTriggers.forEach((trigger) => trigger.addEventListener());\n  }\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from 'uuid';\nimport { deleteCookie, getCookie, setCookie } from '../utils/cookie';\n\nexport function checkAndSetSessionId(): void {\n  const sessionId = getCookie('session_id');\n  if (!sessionId) {\n    // Generate a new session_id and set the cookie\n    const newSessionId = uuidv4();\n    setCookie('session_id', newSessionId);\n\n    // Increment the sessionCount cookie\n    const sessionCount = parseInt(getCookie('session_count') || '0', 10);\n    const newSessionCount = (sessionCount + 1).toString();\n    setCookie('session_count', newSessionCount, { maxAge: 30 * 24 * 60 * 60 });\n  }\n}\n\n// Initialize the inactivity timer\nexport function initInactivityTimer() {\n  let timeout: ReturnType<typeof setTimeout> | null = null;\n\n  function resetTimeout(): void {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(() => {\n      deleteCookie('session_id'); // Delete the session_id cookie\n      checkAndSetSessionId(); // Create a new session_id after the old one has been deleted\n    }, 30 * 60 * 1000); // 30 minutes\n  }\n\n  // Listen for user activity events to reset the timeout\n  document.addEventListener('mousemove', resetTimeout);\n  document.addEventListener('mousedown', resetTimeout);\n  document.addEventListener('keypress', resetTimeout);\n  document.addEventListener('touchmove', resetTimeout);\n  document.addEventListener('scroll', resetTimeout);\n}\n","function setupConsentBanner() {\n  const consentBanner = document.getElementById('cookie-consent-banner');\n  const acceptCookiesBtn = document.getElementById('accept-cookies');\n\n  function checkCookieConsent(): boolean {\n    const consentValue = localStorage.getItem('cookie_consent');\n    return consentValue === 'accepted';\n  }\n\n  function acceptCookieConsent(): void {\n    localStorage.setItem('cookie_consent', 'accepted');\n    if (consentBanner) {\n      consentBanner.classList.add('hidden');\n    }\n  }\n\n  if (!checkCookieConsent() && consentBanner) {\n    consentBanner.classList.remove('hidden');\n  }\n\n  if (acceptCookiesBtn) {\n    acceptCookiesBtn.addEventListener('click', () => {\n      acceptCookieConsent();\n    });\n  }\n}\n\nexport const initConsentBanner = (): void => {\n  setupConsentBanner();\n};\n","import { WebAnalyticsFacade } from './analytics';\nimport { checkAndSetAnonymousId } from './identity/create-anonymous-user-id';\nimport { checkAndSetSessionId, initInactivityTimer } from './identity/set-session-id';\nimport { initModal } from './components/subscribe-newsletter';\nimport { initConsentBanner } from './components/consent-banner';\n\nconst webAnalytics = new WebAnalyticsFacade();\nwebAnalytics.initialize();\n\ncheckAndSetAnonymousId();\ncheckAndSetSessionId();\ninitInactivityTimer();\ninitModal();\ninitConsentBanner();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // const urlParams = new URLSearchParams(window.location.search);\n  // const title = urlParams.get('title') || 'Default Title';\n  const hash = window.location.hash.substring(1); // Remove the leading #\n  const decodedHash = decodeURIComponent(hash);\n  const title = decodedHash || 'Default Title';\n\n  const storyTitleElement = document.getElementById('story-title');\n  if (storyTitleElement) {\n    storyTitleElement.textContent = title;\n  }\n});\n","import { MockApiAnalytics } from './providers/mock-api-analytics';\nimport { DummyAnalytics } from './providers/dummy-analytics';\nimport { AnalyticsService } from './service';\nimport { TriggerBinder } from './triggers';\n\nexport class WebAnalyticsFacade {\n  async initialize(options?: Record<string, unknown>): Promise<AnalyticsService> {\n    const mockApiAnalyticsWithFetch = new MockApiAnalytics({ useSendBeacon: false });\n    const mockApiAnalyticsWithSendBeacon = new MockApiAnalytics({ useSendBeacon: true });\n    const dummyAnalytics = new DummyAnalytics();\n    const analyticsService = new AnalyticsService([\n      mockApiAnalyticsWithFetch,\n      mockApiAnalyticsWithSendBeacon,\n      dummyAnalytics,\n    ]);\n    await analyticsService.initialize(options);\n    const triggerBinder = new TriggerBinder(analyticsService);\n    triggerBinder.initialize();\n    return Promise.resolve(analyticsService);\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport { getCookie, setCookie } from '../utils/cookie';\n\nexport function checkAndSetAnonymousId(): void {\n  const anonymousId = getCookie('anonymous_user_id');\n  const cookieOptions = { maxAge: 365 * 24 * 60 * 60 };\n\n  if (!anonymousId) {\n    setCookie('anonymous_user_id', uuidv4(), cookieOptions);\n  } else {\n    // Update the anonymous_user_id cookie with the same value but reset its maxAge.\n    setCookie('anonymous_user_id', anonymousId, cookieOptions);\n  }\n}\n","import { setCookie, getCookie } from '../utils/cookie';\n\nexport function initModal() {\n  const modal = document.getElementById('subscription-modal') as HTMLElement;\n  const showModalButton = document.getElementById('show-modal') as HTMLButtonElement;\n  const closeButton = document.querySelector('.close') as HTMLElement;\n\n  if (!modal || !showModalButton || !closeButton) {\n    return;\n  }\n\n  const sessionCount = parseInt(getCookie('session_count') || '0', 10);\n  const subscribed = getCookie('subscribed') === 'true';\n  const closed = getCookie('subscribeModalClosed') === 'true';\n\n  showModalButton.onclick = () => {\n    modal.style.display = 'block';\n  };\n\n  closeButton.onclick = () => {\n    modal.style.display = 'none';\n    setCookie('subscribeModalClosed', 'true', { maxAge: 1 * 24 * 60 * 60 });\n  };\n\n  window.onclick = (event: MouseEvent) => {\n    if (event.target === modal) {\n      modal.style.display = 'none';\n    }\n  };\n\n  // Replace this with your actual newsletter form submission event\n  document.getElementById('newsletter-form')?.addEventListener('submit', (e) => {\n    e.preventDefault();\n    setCookie('subscribed', 'true', { maxAge: 365 * 24 * 60 * 60 });\n    modal.style.display = 'none';\n  });\n\n  // Show the modal only for 1st and 5th visit, and if the user has not subscribed\n  if (!subscribed && !closed && (sessionCount === 1 || sessionCount === 5)) {\n    modal.style.display = 'block';\n  } else {\n    modal.style.display = 'none';\n  }\n}\n"],"names":["$79b26d7e64fe8307$export$2e2bcd8739ae039","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$b66b0dbb51c90160$export$110700823644f4a6","name","options","cookie","encodeURIComponent","undefined","maxAge","path","domain","secure","sameSite","document","$b66b0dbb51c90160$export$4be65e66cfa2648a","cookieName","cookies","split","trimmedCookie","trim","startsWith","decodeURIComponent","slice","length","$9070db00310e5ae0$export$243e62d78d3b544d","LogLevel","$9070db00310e5ae0$export$efa9a398d6368992","getLogLevel","this","logLevel","debug","message","log","DEBUG","info","INFO","warn","WARN","error","ERROR","level","logMetadata","cleanedLogLevel","metaData","metadata","thunkData","thunk","console","constructor","$9070db00310e5ae0$export$af88d00dbe7f521","urlLogLevel","logLevelParam","URLSearchParams","window","location","search","get","toLowerCase","$9070db00310e5ae0$var$getLogLevelFromUrl","toString","$9070db00310e5ae0$var$saveLogLevelToSessionCookie","sessionLogLevel","logLevelStr","parseInt","$9070db00310e5ae0$var$getLogLevelFromSessionCookie","$9070db00310e5ae0$export$6664d05a2d299749","$e302660d28818c87$export$245a055e5b8ddf74","initialize","async","eventName","data","beeceptor_analytics","Promise","resolve","providerData","useSendBeacon","navigator","sendBeacon","blob","Blob","JSON","stringify","type","endpoint","response","fetch","method","headers","body","ok","statusText","config","$a7eff9e83102803a$export$5872c2a204fe4f7a","dummy_analytics","$325a8e8c93748a8b$export$a63ba6b63d0ef2e0","isInitialized","all","analyticsProviders","map","provider","trackEvent","providers","$8c2da60240419f6d$var$TriggerVariablesParser","getCommonVars","event_timestamp","Date","toISOString","user_agent","userAgent","getPageVars","pageVars","querySelector","parse","innerHTML","getVars","eventConf","commonVars","pageVarsObj","combinedVars","vars","resultVars","providerConfig","providerVars","keys","prototype","hasOwnProperty","call","extra_keys","exclude_keys","key_mapping","$8c2da60240419f6d$var$Trigger","addEventListener","selector","handler","bind","removeEventListener","getEventConf","element","analyticsService","$8c2da60240419f6d$export$9dabcaab327c42e4","event","currentTarget","dataset","eventConfObj","triggerVariableParser","super","$8c2da60240419f6d$export$878fd18bbc5cd4f9","bindClickTriggers","clickTriggerElements","querySelectorAll","Array","from","forEach","trigger","$7bace6f722a4f7eb$export$2e2bcd8739ae039","crypto","randomUUID","$b2a09908cb43ca7e$var$getRandomValues","$b2a09908cb43ca7e$var$rnds8","Uint8Array","$b2a09908cb43ca7e$export$2e2bcd8739ae039","getRandomValues","Error","$7cb2802edeb5091d$var$byteToHex","i","push","$7cb2802edeb5091d$export$8fb373d660548968","arr","offset","$21bd0de776c72d58$export$2e2bcd8739ae039","buf","rnds","random","rng","$5fd976331a851828$export$1cbd0a6d0e35dd33","$9618878de5305425$var$setupConsentBanner","consentBanner","getElementById","acceptCookiesBtn","localStorage","getItem","classList","remove","setItem","add","mockApiAnalyticsWithFetch","mockApiAnalyticsWithSendBeacon","dummyAnalytics","anonymousId","cookieOptions","timeout","resetTimeout","clearTimeout","setTimeout","modal","showModalButton","closeButton","sessionCount","subscribed","closed","onclick","style","display","target","e","preventDefault","hash","substring","title","storyTitleElement","textContent"],"version":3,"file":"index.89bd0ff2.js.map"}